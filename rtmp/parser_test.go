package rtmp

import (
	"encoding/hex"
	"fmt"
	"testing"

	"github.com/devpospicha/media-server/avformat/utils"
	"github.com/devpospicha/media-server/flv/amf0"
)

// 解析chunk消息
func TestParser(t *testing.T) {

	strs := []string{
		"065deab30013d509000000000701000000000013cc41f01820fff7e66931a23a76a7de10f8505938365fe0daca3c6d8af1baa51e7fcd9929d95580ef39982dc86f20eb738a72ee9b0b0f9331adb0b658b4db922bcb4e380919ee4a4bfc5a9f74011e9267e5bde9fd1ad82887f788c89602e8678edc451238dc778831549cee2170f8c2964c70f92a851c20a2564c6574b2b7388d4d4c0d69b54cac0cb7a335e25c54cb702911ca09d2233e1a0890f810f4c3cc85758bc586856b5550d1c36a8e5b6755e4702b04e85438b67680da55fdc3b4f392b37d5669c3b36477a002cc96f7ed435d9e2dcb96eb459bfa79edf69351bfe649fa1e2d78c4909f289b85839a646742de43ffa1ea39665829374a1747bc4c1dbc1eb6d8d5980b81a42dae6f2d1c97540f1d3e5cf6a0554e52f49f57725d34505173f748f8691d14c5a6c3b300248a165dabff090a1db7076c2953ab76f1729210205701fe3ff824d4754e980be203df7eef7a27a75b0c82fbe9cb22c84c02e4e466463a401c458f8237283648af198cef496b2600f03d054feaa3ac320680e3915e36393ba36a0d65256a20d1e1e0cf45eb81b9dec890dba7d3c25311b2ad4f36bb057b37f09ff3c4c1a173d214e51e6a760413c69ce5db9915c0b274889dfd5dcf372a249caf3155ea5bdac8ccfa4300c6bdca1ffbd42e3a03e9bda6a8c5acd6e04af85a38ff893dff728a52c15b3ecd0f639a7d0387c9961f33c5164cc4ffad179547b1208f395f9995672d5a80b2a1ffeb8df39b9194761e08d2ff262d32379284738c265cfb7294b65d113167ed0f6dee522eeaef605a921ce580fad3e212fec546414a0ba56107d9a5ffe661b0642ee3e9123f5b3aae45af02d1ba2d87302eab30c3c35e4c7c093d4c33d97900f542b4e0fe42ad429306b0e344cc6dc1be4a5ea3843f44f0ff6e3b2e78596fbf57b0d2b15049f84e994682c51a1efe88e28762abb2c8a1dbb09cd68c28f8747264a6825afaf9d7dbefda4dac3244ce9ba1d2e5e595139a478a085aa7efe44b89a989c0deb7783598d45111020cc0f111ef98cb1186bb088e006227f74bc48bfa79e8640b37e9b8b6c668ea17e65b460429c5ce7a8f0203d724b8084775d8ac8c5176ac71a4a1f89967997f299477e3250cd2ed3919c187e62f00ca705e17bf8f34c921d5ed5267412e0f8a819bcec9a52829e4763a3cf99a520e22375dd8d78544ccfd406a02b0914f4e8e3461a8566552c3e85d789737d6673ece2d6319602ea01fb75acbbb521ea840909cc04add8e809d961b761220422f8fb48bef06a259dae2234cef10cfea9c3a5a6ae8876668364263acf406c88a6bc80f7df3166c5f13f6d527319818b09c0841f031f64af6ac616b017a7340e06eb286d88ed007fa846829559b7b7ecd541db60df82f07a7d221b5f95d3430d5e2a7f3946a77202323715f70a0b17eff71b9d4e53b275f45f012e785b40bea9f8e382b35dda2fff25c8555d852938f5abea8151ace400d024a55554ace31e7c9aee71c93467fea971f1f62e91d883d48ee2eb719764985449ff9aba77017864f48019de47314557f4fa1ecc444d0e71b6c693fbc31b9bee2caaea5f195f9bff1e4caf25311cec3f7bb6e7f2890c3b2f04fd165d972ca777030daed6b7072cae565f3145efbaeb81238f21b8d71122e64599262970bf969a2ce1ccb8dfa34ca9529cbc3d5447a74ce0f1a4f01d1022d4ebf1b55589f7e9d5d121ea6c7e20dbb6cfb5ca7ab03aebc7377b2337429c9dcade406398f491689d43394550ed88381920ca6f6275cfde51896dc5dfd0f731e927be351553a8321045d469414bfe5bb05d679d1974ae4759e23a61a2920f6fa87d131573f07de5d8648020f273295cd553f1d56ea94bba6ae3d246c702a56bbc59be0c1d7c8e55654d796e9712f7b2fdf52f960d8aa343a5e3d465f5b9e542484269dd8574dd70f38f0f4ca74c5fb1b337881a90c85b1198d7ace5bdc2ebde1bf86b1f17c8d60ebbc09db8aa5603f64709b56de43b67b85833f324f2fd946b88d0ec393229dc388b7a4",
		"0500000000009a14010000000200086f6e537461747573000000000000000000050300056c6576656c0200067374617475730004636f64650200144e657453747265616d2e506c61792e5265736574000b6465736372697074696f6e02001d506c6179696e6720616e6420726573657474696e672073747265616d2e000764657461696c7302000673747265616d0008636c69656e74696402000841534149436973730000090500000000009414010000000200086f6e537461747573000000000000000000050300056c6576656c0200067374617475730004636f64650200144e657453747265616d2e506c61792e5374617274000b6465736372697074696f6e0200175374617274656420706c6179696e672073747265616d2e000764657461696c7302000673747265616d0008636c69656e74696402000841534149436973730000090500000000001812010000000200117c52746d7053616d706c65416363657373010101010500000000002c12010000000200086f6e537461747573030004636f64650200144e657453747265616d2e446174612e53746172740000090300000000012a120100000002000a6f6e4d657461446174610300057769647468004086800000000000000668656967687400407e000000000000000c766964656f636f646563696400401c00000000000000096672616d6572617465004039000000000000000d766964656f6461746172617465000000000000000000000c617564696f636f6465636964004024000000000000000f617564696f73616d706c65726174650040bf400000000000000f617564696f73616d706c6573697a65004030000000000000000d617564696f6461746172617465000000000000000000000673746572656f0101000866696c6573697a6500000000000000000000067365727665720200105352532f342e302e323638284c656f29000e7365727665725f76657273696f6e020007342e302e3236380000090700000900000b0801000000af001590fff96c80017ffc0600001400002f090100000017000000000164000affe100116764000aacb405a1ed2b05060506d0a13501000e68ee06f2c00000000106005a01e006000014001925090100000027010000000000191c41e618cf0e1bce00ee109c2e02f5427a18611e7baea78c95e72247c7c6c1118730e08e6aa8408fd00737d6443078debe3000f76abcc8c9978380fe6243b27e48b376ec935ac1c644fd7bdd2855f03c20f246f622f894ad57a897d52313c45a24d0f8d78f837112f5e202ee1af6a3449a05dbf8088a0e56f52e9ba611188f01f05d3ce804732ee2e3bad6f8ac8a3fb92fca3abc6dba0f618423d3cb01072b35acd14b3ef409322ac7fdceb9a71edb98834518aac8cced8db4807d7d6910fa75a902df67da4654b87fc2b1695d501259e2917644e2b0cea2ee74ac68b3fb26b0d5cceefa29bf4117dca7ad20984e3526497390863df0c9f20406b20f8c2fc2be66289f8e47402321625e5be3d7909ded05f1daab2b05aea5427ca6712d508cb4316908133db7e76a481a7648b567676a5012fd7c7559b2a585c4786f784139402673482229c5e22f683079fe85b7e62ec52321123db9423faa82cac46b5ec27cd166c033852f9132a4c70c84cf47a7c64e0242ff013c8f19e61a9b8352664628b1841853ac8ba54beb0abd053cabdd30e156ca1eadef26fae194e51015cc7ced01407ccb0bed3d2ce2374654c46edfa7dc63246d35d607def0a32aad5602500cb7f31967a4f4a69efe264de58c9b21ff0190e8a0ffb14a586d3d7271dfba7230d9698ab1b085471168a364feddb495b582121e3a6cbab2bdfefdfd0c0f15a329b71a3fbfc08b291204b2cc5bab7f64cba6fcce6f1c4dbee57363434be5757c7b44f8971b01d42e043a2d3eea25672fd19164187036718b83320386768d51fe04d9f3fb81af9951d2711ae846d87c0758a4814d521491b1f90ffb81883d5ccb276881e8d5baee87ffb3ad4c77224d1d8188c1151b29cf894d6b1145dacc8563b0f51fe862e0092d34d6309d4df52b36758b844e5f166fb07bb69657a3b1e2977fbcc171bc95885e99b2c85028f04ce5df278d3c15681c25c21e9030985141bf9ef8d8ab21121c55297f58608b5fbbb9b3e097a769332d311edb8c5ebd5516d05bd84c69583d363fd2e53c8e86058b70dd9d71d971d1c1469d95b239abf11ac9eb71b7dddd3d950f7797f4e4b8b9e8bbe717a2a993a2fae035fbb622a34265e79da7c520d77e95eb9d11738c7820bd09a6abba71380ef30fc8fe38450eb669ef999eabb20190c27840c9fff95e953846dacf9eab395ec54c4b114c718280b88795aba5de3ffa00cb7a55608e53da52e50bdd9a9664277f36bf76301f69edc45d2deeb54ad1b7a1b49f6737f728b00eb11d453150f3d8d7ef82401a188f697be775bb62de0804ddf972ebbdbe6682e652b73a586671036eb852b85b808c36c993cb9441a110be336bebfd79e43f0954fcec770d72a6012924d943e485f5075daffbd2a2b36374eacbd7e26e67c7be3001b8feafa80c11b1765876a95476b863651f5434b7c16c08f364a5be2a08325bc7ca6c87da07b6405b718acdc0b2a3931408052f4380481904b202feafe388a72141493794304ef53d0ea2d667216c94e8bec56641d3a61f8d5ed6e1a1059264a60f550bb1365c5b39df05774d269dcdab0d1a4993a398bdbe1e104bbc896c6efa27f3924292b24393720e65abdf1ded2b574fd887b89c7bc5072012cdc397202bc47b4cf07195b16c8a71b57f95d8bdd6ce83ec75e79682605b070b9f8c3c3f23aad42cf62dcf27d6db2a1f94f50cb009488d5acc16ee23327807d48637bbacdc5101c1e1271e358d40358a2a8a406b5317ca49df4f821d926dd8cfa9df0fffffed9723ac038042e3aedbae9fe428a8d6e7101ace39b444e3fbe65d422910bdb873580af5f86298d4f30e6a2bbf619fd5a434d1fffe4e9d3dfa20a32a92d3fbfc147d1c6ba1add64beb65fdfa4af48769e8bd8abe9e8a1c98401ec80432a1bf7cabe8eac4f17706a3e852e5ec13d8246fa9366537d466fa7a3d67e8cfba97f3888ffe724de2dc754b23362e573d855d2fd132cb8df702e1090411672361d1e3ff3bb27bf1b38771182daef9c304f812aec61c11535b04320d2186d0aa16bf8e8538fc2d6ada73e2b2443c4c2c187b1d2ed9ba2ad208d4d1b44c5c0f1b1cab2282c762efa5a4c5e04e3169a4cdaf9c1284a6fa8b0aa1723dd3ae73ad82f89d33ab5208eeec45ac1364cada7ddd6b14dbb8d05b9ef18889ca6db4e27cfa2d08b09cc7c0b52aa4f972950b4d72aeb3d0b0beb9244cee7afb05900de02f1fdd3b1810675d2f1db76f9f375e1caa9575a44f805dab1ec204a3b4858dc684e3b4fb41ee80e13b720bbb368ba92cef150bed9db7647160797c114aa7c4f9b4b4197560afd953c1cfac4112c5668e1dc1a349fbf9cce5e679fb4b0868936c11a9999b2064e6ea7ee05e1675f63d5b85c8ff762a5d489a2615996b55a3ba3955a58a29acd6857d5d65e77533eaa09252223f7256a2431460d2a6030a57aed53644e332675bbe87e3b43f5f4c22c19bc0a32207db5c4dbfd4d6a49275c3d0de7e24da25e734876454e2cf6d38a3f5288e3037e36cf06b46b761bd2bff4dac65e907118f0dd923c43e5843881593cfc7bfa0487823695c4c448c54213cdd00ff63054373e9fe9c449af3fec820cd40a35e60ffa596f6086e5955956660e51ca0a43024d2c82d643df26b861570c26ba08c0b5ed0db9e22c64ae268a13cdc260da18cfb752105b0d4f632fa39d97d29148eb33eeb64074fe98b8bf4c14dcc6096c73cecbe048f05a776be8e8c512fc615c3",
	}

	for _, str := range strs {
		bytes, err := hex.DecodeString(str)
		if err != nil {
			panic(err)
		}

		parser := &Parser{}
		var length int
		for {
			chunk, i, err := parser.ReadChunk(bytes[length:], MaxChunkSize, nil)
			if err != nil || i < 1 || chunk == nil {
				break
			}

			if MessageTypeIDDataAMF0 == chunk.TypeID {
				data := amf0.Data{}
				utils.Assert(data.Unmarshal(chunk.Body[:chunk.Size]) == nil)
			} else if MessageTypeIDVideo == chunk.TypeID {
				fmt.Printf("video chunk type: %d\r\n", chunk.Type)
			} else if MessageTypeIDAudio == chunk.TypeID {
				fmt.Printf("audio chunk type: %d\r\n", chunk.Type)
			}

			length += i
			chunk.Reset()
			parser.Reset()
		}
	}

}
